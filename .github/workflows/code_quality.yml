name: SonarCloud

on:
  workflow_call:
    secrets:
      SONAR_TOKEN:
        required: true
      SONAR_PROJECTKEY:
        required: true
      SONAR_ORGNAME:
        required: true
      AIKIDO_SECRET_KEY:
        required: true
        
jobs:
  build:
    name: Sonarcloud
    runs-on: ubuntu-latest
    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          overwrite-settings: false
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Cache SonarCloud packages
        uses: actions/cache@v4
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar      
      - name: Install SonarCloud scanner        
        run: |          
          dotnet tool install --global dotnet-sonarscanner
      - name: Install dotnet-coverage
        run: |
          dotnet tool install --global dotnet-coverage
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}        
        run: |
          dotnet-sonarscanner begin /k:"${{ secrets.SONAR_PROJECTKEY }}" /o:"${{ secrets.SONAR_ORGNAME }}" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.vscoveragexml.reportsPaths=coverage.xml
          dotnet restore
          dotnet build --configuration Release --no-restore
          dotnet-coverage collect "dotnet test" -f xml -o "coverage.xml"
          dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
  
  aikido-security:
    name: aikidoSecurity
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Detect new vulnerabilities
        uses: AikidoSec/github-actions-workflow@v1.0.8
        with:
            secret-key: ${{ secrets.AIKIDO_SECRET_KEY }}
            fail-on-timeout: true
            fail-on-dependency-scan: true
            fail-on-sast-scan: false
            fail-on-iac-scan: false
            minimum-severity: 'CRITICAL'
            timeout-seconds: 180
            post-scan-status-comment: true
            github-token: ${{ secrets.GITHUB_TOKEN }}
