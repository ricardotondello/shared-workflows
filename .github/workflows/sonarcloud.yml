name: Sonar Cloud

on:
  workflow_call:
    secrets:
      SONAR_TOKEN:
        required: true
      SONAR_PROJECTKEY:
        required: true
      SONAR_ORGNAME:
        required: true
        
jobs:
  sonar-cloud:
    name: Sonarcloud
    runs-on: ubuntu-latest
    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          overwrite-settings: false
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Cache SonarCloud packages
        uses: actions/cache@v4
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar      
      - name: Install SonarCloud scanner        
        run: |          
          dotnet tool install --global dotnet-sonarscanner
      - name: Install dotnet-coverage
        run: |
          dotnet tool install --global dotnet-coverage
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}        
        run: |
          dotnet-sonarscanner begin /k:"${{ secrets.SONAR_PROJECTKEY }}" /o:"${{ secrets.SONAR_ORGNAME }}" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.vscoveragexml.reportsPaths=coverage.xml
          dotnet restore
          dotnet build --configuration Release --no-restore
          dotnet-coverage collect "dotnet test" -f xml -o "coverage.xml"
          dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
          
